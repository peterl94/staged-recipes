From 3220dd66dd2662c82e13982298426d10bd5481eb Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Sun, 30 Oct 2016 10:15:11 +0100
Subject: [PATCH 1/3] apply patch

---
 python/CMakeLists.txt    |  6 +++++-
 python/__init__.py       |  2 +-
 python/tspline_pyext.cpp | 28 ++++++++++++++--------------
 source/splbase.cpp       |  1 +
 4 files changed, 21 insertions(+), 16 deletions(-)

diff --git a/python/CMakeLists.txt b/python/CMakeLists.txt
index 3e344e2..12e2e95 100644
--- a/python/CMakeLists.txt
+++ b/python/CMakeLists.txt
@@ -12,7 +12,11 @@ set_target_properties(_tspline PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINAR
 set_target_properties(_tspline PROPERTIES PREFIX "")
 
 target_link_libraries(_tspline rhino tspline newmat)
-
+if(WIN32 OR CYGWIN)
+    target_link_libraries(_tspline PRIVATE rhino tspline newmat ${PYTHON_LIBRARIES})
+else(WIN32 OR CYGWIN)
+    target_link_libraries(_tspline rhino tspline newmat)
+endif(WIN32 OR CYGWIN)
 configure_file(__init__.py "../tspline/__init__.py" COPYONLY)
 
 install(DIRECTORY "./" DESTINATION ${PYTHON_INSTALL_DIR} FILES_MATCHING PATTERN "*.py")
diff --git a/python/__init__.py b/python/__init__.py
index 9da36a3..cec728d 100644
--- a/python/__init__.py
+++ b/python/__init__.py
@@ -1 +1 @@
-from _tspline import *
\ No newline at end of file
+from tspline._tspline import *
\ No newline at end of file
diff --git a/python/tspline_pyext.cpp b/python/tspline_pyext.cpp
index 0d5973c..bf98b95 100644
--- a/python/tspline_pyext.cpp
+++ b/python/tspline_pyext.cpp
@@ -149,7 +149,7 @@ void init_tspline(py::module &m)
     // TGroup:
     py::class_<TSPLINE::TGroup, TSPLINE::TGroupPtr>(m, "Group",
             py::base<TSPLINE::TObject>(), "docs")
-        .def(py::init<const std::string &>(), py::arg("name")="")
+        .def(py::init<const std::string &>(), py::arg("name")=py::str(""))
         .def("addObject", &TSPLINE::TGroup::addObject)
         .def("insertObject", &TSPLINE::TGroup::insertObject)
         .def("removeObject", (bool (TSPLINE::TGroup::*)(const TSPLINE::TObjectPtr &)) 
@@ -162,7 +162,7 @@ void init_tspline(py::module &m)
     py::class_<TSPLINE::TVertex, TSPLINE::TVertexPtr>(m,
         "Vertex", py::base<TSPLINE::TMappableObject>(), "Coordinates (s, t) in the parametric space")
         .def(py::init<const std::string &, TSPLINE::Real, TSPLINE::Real>(),
-             py::arg("name")="", py::arg("s")=0., py::arg("t")=0.)
+             py::arg("name")=py::str(""), py::arg("s")=0., py::arg("t")=0.)
         .def("setNeighbour", &TSPLINE::TVertex::setNeighbours)
         .def("setNeighboursByVertices", &setNeighboursByVertices)
         .def("getS", &TSPLINE::TVertex::getS)
@@ -173,7 +173,7 @@ void init_tspline(py::module &m)
     // TEdge:
     py::class_<TSPLINE::TEdge, TSPLINE::TEdgePtr>(m, "Edge", 
         py::base<TSPLINE::TMappableObject>(), "docs")
-        .def(py::init<const std::string &>(), py::arg("name")="")
+        .def(py::init<const std::string &>(), py::arg("name")=py::str(""))
         .def("patch", &patchEdge)
         .def("setStartVertex", &TSPLINE::TEdge::setStartVertex)
         .def("getStartVertex", &TSPLINE::TEdge::getStartVertex)
@@ -186,20 +186,20 @@ void init_tspline(py::module &m)
     // TFace:
     py::class_<TSPLINE::TFace, TSPLINE::TFacePtr>(m, "Face",
         py::base<TSPLINE::TMappableObject>(), "docs")
-        .def(py::init<const std::string &>(), py::arg("name")="")
+        .def(py::init<const std::string &>(), py::arg("name")=py::str(""))
         .def("addLink", &TSPLINE::TFace::addLink)
         .def("addBlendingNode", &TSPLINE::TFace::addBlendingNode);
 
     // TLink:
     py::class_<TSPLINE::TLink, TSPLINE::TLinkPtr>(m, "Link",
         py::base<TSPLINE::TObject>(), "docs")
-        .def(py::init<const std::string &>(), py::arg("name")="")
+        .def(py::init<const std::string &>(), py::arg("name")=py::str(""))
         .def("setOrientedEdge", &TSPLINE::TLink::setOrientedEdge);
 
     // TEdgeCondition:
     py::class_<TSPLINE::TEdgeCondition, TSPLINE::TEdgeConditionPtr>(m, "EdgeCondition",
         py::base<TSPLINE::TObject>(), "docs")
-        .def(py::init<const std::string &>(), py::arg("name")="")
+        .def(py::init<const std::string &>(), py::arg("name")=py::str(""))
         .def("setEdgeCondition", &TSPLINE::TEdgeCondition::setEdgeCondition);
 
     // TPoint:
@@ -207,19 +207,19 @@ void init_tspline(py::module &m)
             py::base<TSPLINE::TObject>(), "location of a Vertex in the cartesian space") 
         .def(py::init<const std::string &, TSPLINE::Real, TSPLINE::Real, 
             TSPLINE::Real, TSPLINE::Real>(), "docs here", 
-            py::arg("name")="", py::arg("x")=0., py::arg("y")=0.,
+            py::arg("name")=py::str(""), py::arg("x")=0., py::arg("y")=0.,
             py::arg("z")=0., py::arg("w")=1.)
         .def("setTNode", &TSPLINE::TPoint::setTNode);
 
     // TPointset:
     py::class_<TSPLINE::TPointset, TSPLINE::TPointsetPtr>(m, "Pointset", 
         py::base<TSPLINE::TGroup>(), "docs")
-        .def(py::init<const std::string &>(), py::arg("name")="");
+        .def(py::init<const std::string &>(), py::arg("name")=py::str(""));
 
     // TNode:
     py::class_<TSPLINE::TNode, TSPLINE::TNodePtr>(m, "Node",
         py::base<TSPLINE::TObject>(), "docs")
-        .def(py::init<const std::string &>(), py::arg("name")="")
+        .def(py::init<const std::string &>(), py::arg("name")=py::str(""))
         .def("setTMappableObject", &TSPLINE::TNode::setTMappableObject)
         .def("setTPoint", &TSPLINE::TNode::setTPoint)
         .def("getTMapper", &TSPLINE::TNode::getTMapper);
@@ -228,19 +228,19 @@ void init_tspline(py::module &m)
     // TNodeV4
     py::class_<TSPLINE::TNodeV4, TSPLINE::TNodeV4Ptr>(m, "NodeV4",
         py::base<TSPLINE::TNode>(), "docs")
-        .def(py::init<const std::string &>(), py::arg("name")="")
+        .def(py::init<const std::string &>(), py::arg("name")=py::str(""))
         .def("setNeighbours", &TSPLINE::TNodeV4::setNeighbours);
 
     // TConnect:
     py::class_<TSPLINE::TConnect, TSPLINE::TConnectPtr>(m, "Connect", 
         py::base<TSPLINE::TGroup>(), "docs")
-        .def(py::init<const std::string &>(), py::arg("name")="");
+        .def(py::init<const std::string &>(), py::arg("name")=py::str(""));
 
     // TSpline:
     py::class_<TSPLINE::TSpline, TSPLINE::TSplinePtr>(m, "Spline",
         py::base<TSPLINE::TObject>(), "docs")
-        .def(py::init<const std::string &, int, bool>(), py::arg("name")="",
-             py::arg("degree")=3, py::arg("force_bezier_end_condition")=false)
+        .def(py::init<const std::string &, int, bool>(), py::arg("name")=py::str(""),
+             py::arg("degree")=3, py::arg("force_bezier_end_condition")=py::bool_(0))
         .def("setTImage", &TSPLINE::TSpline::setTImage)
         .def("setTConnect", &TSPLINE::TSpline::setTConnect)
         .def("setTPointset", &TSPLINE::TSpline::setTPointset)
@@ -250,7 +250,7 @@ void init_tspline(py::module &m)
     // TImage:
     py::class_<TSPLINE::TImage, TSPLINE::TImagePtr>(m, "Image",
         py::base<TSPLINE::TObject>(), "docs")
-        .def(py::init<const std::string &>(), py::arg("name")="")
+        .def(py::init<const std::string &>(), py::arg("name")=py::str(""))
         .def("addFace", &TSPLINE::TImage::addFace)
         .def("addLink", &TSPLINE::TImage::addLink)
         .def("addEdge", &TSPLINE::TImage::addEdge)
diff --git a/source/splbase.cpp b/source/splbase.cpp
index 7dfd529..7dada3a 100644
--- a/source/splbase.cpp
+++ b/source/splbase.cpp
@@ -35,6 +35,7 @@ Revision_history:
 */
 
 #include <splbase.h>
+#include <iterator>
 #ifdef use_namespace
 namespace TSPLINE {
   using namespace NEWMAT;
-- 
1.9.1


From 83808e69255c46ae88d00e878e6eec35db72119c Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Sun, 30 Oct 2016 10:19:24 +0100
Subject: [PATCH 2/3] python: windows suffix

---
 python/CMakeLists.txt | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/python/CMakeLists.txt b/python/CMakeLists.txt
index 12e2e95..8ce526d 100644
--- a/python/CMakeLists.txt
+++ b/python/CMakeLists.txt
@@ -10,6 +10,9 @@ SET(PYTHON_INSTALL_DIR ${python_libs}/tspline)
 add_library(_tspline SHARED tspline_pyext.cpp)
 set_target_properties(_tspline PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/tspline)
 set_target_properties(_tspline PROPERTIES PREFIX "")
+if (MSVC)
+    set_target_properties(_tspline PROPERTIES SUFFIX "pyd")
+endif (MSVC)
 
 target_link_libraries(_tspline rhino tspline newmat)
 if(WIN32 OR CYGWIN)
-- 
1.9.1


From 80fc2bad214d151d87059a0e7b2c80ea2d4ed175 Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Sun, 30 Oct 2016 11:05:55 +0100
Subject: [PATCH 3/3] win patch

---
 python/CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/python/CMakeLists.txt b/python/CMakeLists.txt
index 8ce526d..6d2b34b 100644
--- a/python/CMakeLists.txt
+++ b/python/CMakeLists.txt
@@ -11,7 +11,7 @@ add_library(_tspline SHARED tspline_pyext.cpp)
 set_target_properties(_tspline PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/tspline)
 set_target_properties(_tspline PROPERTIES PREFIX "")
 if (MSVC)
-    set_target_properties(_tspline PROPERTIES SUFFIX "pyd")
+    set_target_properties(_tspline PROPERTIES SUFFIX ".pyd")
 endif (MSVC)
 
 target_link_libraries(_tspline rhino tspline newmat)
-- 
1.9.1

